

# Protocolo Scriabin

data = readRDS(tcltk::tk_choose.files())
tf_agg =  ExtractDataFromAnalysis(data, 1)
tf_egm =  ExtractDataFromAnalysis(data, 2)
tf_lrj =  ExtractDataFromAnalysis(data, 3)
tf_malc =  ExtractDataFromAnalysis(data, 4)
tf_rmg =  ExtractDataFromAnalysis(data, 5)

tf_agg2 =TransferFunCWT(tf_agg$Data, tf_agg$HF, tf_agg$LF, tf_agg$VLF,
                       tf_agg$dj, diff(tf_agg$Data[,1])[1])
tf_egm2 = TransferFunCWT(tf_egm$Data, tf_egm$HF, tf_egm$LF, tf_egm$VLF,
                        tf_egm$dj, diff(tf_egm$Data[,1])[1])
tf_lrj2 = TransferFunCWT(tf_lrj$Data, tf_lrj$HF, tf_lrj$LF, tf_lrj$VLF,
                        tf_lrj$dj, diff(tf_lrj$Data[,1])[1])
tf_malc2 = TransferFunCWT(tf_malc$Data, tf_malc$HF, tf_malc$LF, tf_malc$VLF,
                         tf_malc$dj, diff(tf_malc$Data[,1])[1])
tf_rmg2 = TransferFunCWT(tf_rmg$Data, tf_rmg$HF, tf_rmg$LF, tf_rmg$VLF,
                        tf_rmg$dj, diff(tf_rmg$Data[,1])[1])
tfs = list(tf_agg2, tf_egm2, tf_lrj2,
           tf_malc2, tf_rmg2)

agg = list(c(0, 300), c(301, 600),
           c(601, 763), c(764, 1025),
           c(1026, 1262), c(1263, 1500), 
           c(1500, 300000))
egm = list(c(0, 300), c(301, 600),
           c(601, 763), c(764, 1032),
           c(1033, 1259), c(1260, 1506), 
           c(1507, 300000))
lrj = list(c(0, 300), c(301, 610),
           c(611, 755), c(756, 1025),
           c(1026, 1232), c(1233, 1508), 
           c(1509, 300000))
malc = list(c(0, 300), c(301, 610),
           c(611, 755), c(756, 1025),
           c(1026, 1250), c(1251, 1504), 
           c(1505, 300000))
rmg = list(c(0, 300), c(301, 610),
           c(611, 755), c(756, 1029),
           c(1030, 1239), c(1240, 1509), 
           c(1510, 300000))
intervals = list(agg, egm, lrj, malc, rmg)
reposo1 = double(5)
calentamiento = double(5)
reposo2 = double(5)
concierto1 = double(5)
reposo3 = double(5)
concierto2 = double(5)
reposo4 = double(5)
vectors = list(reposo1 = reposo1, 
               calentamiento = calentamiento,
               reposo2 = reposo2,
               concierto1 = concierto1,
               reposo3 = reposo3,
               concierto2 = concierto2,
               reposo4 = reposo4)
HF = vectors
LF = vectors

HF2 = HF
LF2 = LF

for(n in 1:7){
  for(m in 1:5){
    interval = intervals[[m]]
    tf = tfs[[m]]
    HF[[n]][m] = ExpectedValsCWT(tf, thr = 0.5, use.thr = TRUE, 
                                      time_flags = interval[[n]]/60, weight = FALSE)[1]
    LF[[n]][m] = ExpectedValsCWT(tf, thr = 0.5, use.thr = TRUE, 
                                 time_flags = interval[[n]]/60, weight = FALSE)[2] 
    HF2[[n]][m] = ExpectedPhaseCWT(tf, thr = 0.5, use.thr = TRUE, 
                                   time_flags = interval[[n]]/60, weight = FALSE)[1]
    LF2[[n]][m] = ExpectedPhaseCWT(tf, thr = 0.5, use.thr = TRUE, 
                                   time_flags = interval[[n]]/60, weight = FALSE)[2] 
  }
  
}


t.test(HF[[1]], HF[[2]], paired = TRUE)
t.test(HF[[1]], HF[[6]], paired = TRUE)
t.test(HF[[2]], HF[[6]], paired = TRUE)
t.test(HF[[7]], HF[[6]], paired = TRUE)
t.test(LF[[1]], LF[[2]], paired = TRUE)
t.test(LF[[1]], LF[[6]], paired = TRUE)
t.test(LF[[2]], LF[[6]], paired = TRUE)
t.test(LF[[7]], LF[[6]], paired = TRUE)


mean(HF[[2]]) - mean(HF[[1]])
mean(HF[[6]]) - mean(HF[[1]])
mean(HF[[6]]) - mean(HF[[2]])
mean(HF[[7]]) - mean(HF[[6]])
mean(LF[[2]]) - mean(LF[[1]])
mean(LF[[6]]) - mean(LF[[1]])
mean(LF[[6]]) - mean(LF[[2]])
mean(LF[[7]]) - mean(LF[[6]])




concierto_HF <- c(HF[[4]][1], HF[[6]][2], HF[[4]][3], HF[[4]][4], HF[[6]][5])
concierto_LF <- c(LF[[4]][1], LF[[6]][2], LF[[4]][3], LF[[4]][4], LF[[6]][5])
concierto2_HF <- c(HF2[[4]][1], HF2[[6]][2], HF2[[4]][3], HF2[[4]][4], HF2[[6]][5])
concierto2_LF <- c(LF2[[4]][1], LF2[[6]][2], LF2[[4]][3], LF2[[4]][4], LF2[[6]][5])


HFdata <- data.frame(BRS = c(HF[[1]], HF[[2]], HF[[6]], HF[[7]]),
                Interval = c(rep("A", 5), rep("B", 5), rep("C", 5), rep("D", 5)))
LFdata <- data.frame(BRS = c(LF[[1]], LF[[2]], LF[[6]], LF[[7]]),
                     Interval = c(rep("A", 5), rep("B", 5), rep("C", 5), rep("D", 5)))

library(ggplot2)


HFdata <- data.frame(HRV = c(mean(HF[[1]]), mean(HF[[2]]), mean(HF[[6]]), mean(HF[[7]])),
                      Interval = c(rep(1, 1), rep(2, 1), rep(3, 1), rep(4, 1)),
                      sd = c(sd(HF[[1]])/sqrt(5), sd(HF[[2]])/sqrt(5), sd(HF[[6]])/sqrt(5), sd(HF[[7]])/sqrt(5)),
                      Band = rep("HF", 4))
LFdata <- data.frame(HRV = c(mean(LF[[1]]), mean(LF[[2]]), mean(LF[[6]]), mean(LF[[7]])),
                      Interval = c(rep(1, 1), rep(2, 1), rep(3, 1), rep(4, 1)),
                      sd = c(sd(LF[[1]])/sqrt(5), sd(LF[[2]])/sqrt(5), sd(LF[[6]])/sqrt(5), sd(LF[[7]])/sqrt(5)),
                      Band = rep("LF", 4))
HFLFdata <- data.frame(rbind(HFdata, LFdata))

plot1 <- ggplot(HFdata, aes(y = HRV, x = Interval, col = "red")) + geom_line() + geom_point() + 
  geom_errorbar(aes(ymin = HRV - sd, ymax = HRV + sd), width = .1) +
  scale_x_continuous(labels = function(x) LETTERS[seq_along(x)])
plot11 <- ggplot(LFdata, aes(y = HRV, x = Interval, col = "blue")) + geom_line() + geom_point() + 
  geom_errorbar(aes(ymin = HRV - sd, ymax = HRV + sd), width = .1) +
  scale_x_continuous(labels = function(x) LETTERS[seq_along(x)])
par(mfrow = c(1,2))
plot1
plot11

################################################################################
# VARIABILIDAD                                                                 #
################################################################################


# Protocolo Scriabin

tf_agg =  ExtractDataFromAnalysis(data, 1)
tf_egm =  ExtractDataFromAnalysis(data, 2)
tf_lrj =  ExtractDataFromAnalysis(data, 3)
tf_malc =  ExtractDataFromAnalysis(data, 4)
tf_rmg =  ExtractDataFromAnalysis(data, 5)

tf_agg3 = AddCoherenceToVariability(VariabilityCWT(tf_agg$Data[,-3], tf_agg$HF, tf_agg$LF, tf_agg$VLF,
                       tf_agg$dj, diff(tf_agg$Data[,1])[1]), tf_agg2)
tf_egm3 = AddCoherenceToVariability(VariabilityCWT(tf_egm$Data[,-3], tf_egm$HF, tf_egm$LF, tf_egm$VLF,
                        tf_egm$dj, diff(tf_egm$Data[,1])[1]), tf_egm2)
tf_lrj3 = AddCoherenceToVariability(VariabilityCWT(tf_lrj$Data[,-3], tf_lrj$HF, tf_lrj$LF, tf_lrj$VLF,
                        tf_lrj$dj, diff(tf_lrj$Data[,1])[1]), tf_lrj2)
tf_malc3 = AddCoherenceToVariability(VariabilityCWT(tf_malc$Data[,-3], tf_malc$HF, tf_malc$LF, tf_malc$VLF,
                         tf_malc$dj, diff(tf_malc$Data[,1])[1]), tf_malc2)
tf_rmg3 = AddCoherenceToVariability(VariabilityCWT(tf_rmg$Data[,-3], tf_rmg$HF, tf_rmg$LF, tf_rmg$VLF,
                        tf_rmg$dj, diff(tf_rmg$Data[,1])[1]), tf_rmg2)
tfs2 = list(tf_agg3, tf_egm3, tf_lrj3,
           tf_malc3, tf_rmg3)

agg = list(c(0, 300), c(301, 600),
           c(601, 763), c(764, 1025),
           c(1026, 1262), c(1263, 1500), 
           c(1500, 300000))
egm = list(c(0, 300), c(301, 600),
           c(601, 763), c(764, 1032),
           c(1033, 1259), c(1260, 1506), 
           c(1507, 300000))
lrj = list(c(0, 300), c(301, 610),
           c(611, 755), c(756, 1025),
           c(1026, 1232), c(1233, 1508), 
           c(1509, 300000))
malc = list(c(0, 300), c(301, 610),
            c(611, 755), c(756, 1025),
            c(1026, 1250), c(1251, 1504), 
            c(1505, 300000))
rmg = list(c(0, 300), c(301, 610),
           c(611, 755), c(756, 1029),
           c(1030, 1239), c(1240, 1509), 
           c(1510, 300000))
intervals = list(agg, egm, lrj, malc, rmg)
reposo1 = double(5)
calentamiento = double(5)
reposo2 = double(5)
concierto1 = double(5)
reposo3 = double(5)
concierto2 = double(5)
reposo4 = double(5)
vectors = list(reposo1 = reposo1, 
               calentamiento = calentamiento,
               reposo2 = reposo2,
               concierto1 = concierto1,
               reposo3 = reposo3,
               concierto2 = concierto2,
               reposo4 = reposo4)
HF3 = vectors
LF3 = vectors

HF23 = HF
LF23 = LF

for(n in 1:7){
  for(m in 1:5){
    interval = intervals[[m]]
    tf = tfs2[[m]]
    HF3[[n]][m] = ExpectedValsCWT(tf, thr = 0.5, use.thr = FALSE, 
                                 time_flags = interval[[n]]/60, weight = FALSE)[1]
    LF3[[n]][m] = ExpectedValsCWT(tf, thr = 0.5, use.thr = FALSE, 
                                 time_flags = interval[[n]]/60, weight = FALSE)[2] 
    HF23[[n]][m] = ExpectedValsCWT(tf, thr = 0.5, use.thr = TRUE, 
                                   time_flags = interval[[n]]/60, weight = FALSE)[1]
    LF23[[n]][m] = ExpectedValsCWT(tf, thr = 0.5, use.thr = TRUE, 
                                   time_flags = interval[[n]]/60, weight = FALSE)[2] 
  }
  
}

concierto3_HF <- c(HF3[[4]][1], HF3[[6]][2], HF3[[4]][3], HF3[[4]][4], HF3[[6]][5])
concierto3_LF <- c(LF3[[4]][1], LF3[[6]][2], LF3[[4]][3], LF3[[4]][4], LF3[[6]][5])
concierto23_HF <- c(HF23[[4]][1], HF23[[6]][2], HF23[[4]][3], HF23[[4]][4], HF23[[6]][5])
concierto23_LF <- c(LF23[[4]][1], LF23[[6]][2], LF23[[4]][3], LF23[[4]][4], LF23[[6]][5])

t.test(HF3[[1]], HF3[[2]], paired = TRUE)
t.test(HF3[[1]], HF3[[6]], paired = TRUE)
t.test(HF3[[2]], HF3[[6]], paired = TRUE)
t.test(HF3[[7]], HF3[[6]], paired = TRUE)
t.test(LF3[[1]], LF3[[2]], paired = TRUE)
t.test(LF3[[1]], LF3[[6]], paired = TRUE)
t.test(LF3[[2]], LF3[[6]], paired = TRUE)
t.test(LF3[[7]], LF3[[6]], paired = TRUE)

mean(HF3[[2]]) - mean(HF3[[1]])
mean(HF3[[6]]) - mean(HF3[[1]])
mean(HF3[[6]]) - mean(HF3[[2]])
mean(HF3[[7]]) - mean(HF3[[6]])
mean(LF3[[2]]) - mean(LF3[[1]])
mean(LF3[[6]]) - mean(LF3[[1]])
mean(LF3[[6]]) - mean(LF3[[2]])
mean(LF3[[7]]) - mean(LF3[[6]])


#############################################################################
#                                                                           #
#############################################################################

t.test(HF23[[1]], HF23[[2]], paired = TRUE)
t.test(HF23[[1]], HF23[[6]], paired = TRUE)
t.test(HF23[[2]], HF23[[6]], paired = TRUE)
t.test(HF23[[7]], HF23[[6]], paired = TRUE)
t.test(LF23[[1]], LF23[[2]], paired = TRUE)
t.test(LF23[[1]], LF23[[6]], paired = TRUE)
t.test(LF23[[2]], LF23[[6]], paired = TRUE)
t.test(LF23[[7]], LF23[[6]], paired = TRUE)

mean(HF23[[2]]) - mean(HF23[[1]])
mean(HF23[[6]]) - mean(HF23[[1]])
mean(HF23[[6]]) - mean(HF23[[2]])
mean(HF23[[7]]) - mean(HF23[[6]])
mean(LF23[[2]]) - mean(LF23[[1]])
mean(LF23[[6]]) - mean(LF23[[1]])
mean(LF23[[6]]) - mean(LF23[[2]])
mean(LF23[[7]]) - mean(LF23[[6]])

HFdata2 <- data.frame(HRV = c(mean(HF3[[1]]), mean(HF3[[2]]), mean(HF3[[6]]), mean(HF3[[7]])),
                     Interval = c(rep(1, 1), rep(2, 1), rep(3, 1), rep(4, 1)),
                     sd = c(sd(HF3[[1]])/sqrt(5), sd(HF3[[2]])/sqrt(5), sd(HF3[[6]])/sqrt(5), sd(HF3[[7]])/sqrt(5)),
                     Band = rep("HF", 4))
LFdata2 <- data.frame(HRV = c(mean(LF3[[1]]), mean(LF3[[2]]), mean(LF3[[6]]), mean(LF3[[7]])),
                      Interval = c(rep(1, 1), rep(2, 1), rep(3, 1), rep(4, 1)),
                     sd = c(sd(LF3[[1]])/sqrt(5), sd(LF3[[2]])/sqrt(5), sd(LF3[[6]])/sqrt(5), sd(LF3[[7]])/sqrt(5)),
                     Band = rep("LF", 4))
HFLFdata2 <- data.frame(rbind(HFdata2, LFdata2))
HFdata22 <- data.frame(HRV = c(mean(HF23[[1]]), mean(HF23[[2]]), mean(HF23[[6]]), mean(HF23[[7]])),
                      Interval = c(rep(1, 1), rep(2, 1), rep(3, 1), rep(4, 1)),
                      sd = c(sd(HF23[[1]])/sqrt(5), sd(HF23[[2]])/sqrt(5), sd(HF23[[6]])/sqrt(5), sd(HF23[[7]])/sqrt(5)),
                      Band = rep("HF", 4))
LFdata22 <- data.frame(HRV = c(mean(LF23[[1]]), mean(LF23[[2]]), mean(LF23[[6]]), mean(LF3[[7]])),
                      Interval = c(rep(1, 1), rep(2, 1), rep(3, 1), rep(4, 1)),
                      sd = c(sd(LF23[[1]])/sqrt(5), sd(LF23[[2]])/sqrt(5), sd(LF23[[6]])/sqrt(5), sd(LF23[[7]])/sqrt(5)),
                      Band = rep("LF", 4))
HFLFdata22 <- data.frame(rbind(HFdata22, LFdata22))

library(ggplot2)


plot2 <- ggplot(HFLFdata2, aes(y = HRV, x = Interval, col = Band, group = Band)) + geom_line() + geom_point() + 
  geom_errorbar(aes(ymin = HRV - sd, ymax = HRV + sd), width = .1) +
  scale_x_continuous(labels = function(x) LETTERS[seq_along(x)])

plot22 <- ggplot(HFLFdata22, aes(y = HRV, x = Interval, col = Band, group = Band)) + geom_line() + geom_point() + 
  geom_errorbar(aes(ymin = HRV - sd, ymax = HRV + sd), width = .1) +
  scale_x_continuous(labels = function(x) LETTERS[seq_along(x)])


